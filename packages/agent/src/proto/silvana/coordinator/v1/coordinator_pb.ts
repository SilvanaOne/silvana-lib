// @generated by protoc-gen-es v2.7.0 with parameter "target=ts,js_import_style=module"
// @generated from file proto/silvana/coordinator/v1/coordinator.proto (package silvana.coordinator.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/silvana/coordinator/v1/coordinator.proto.
 */
export const file_proto_silvana_coordinator_v1_coordinator: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_descriptor]);

/**
 * Job message matching the partial Move struct
 *
 * @generated from message silvana.coordinator.v1.Job
 */
export type Job = Message<"silvana.coordinator.v1.Job"> & {
  /**
   * @generated from field: uint64 job_sequence = 1;
   */
  jobSequence: bigint;

  /**
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * Metadata of the agent method to call
   *
   * @generated from field: string developer = 3;
   */
  developer: string;

  /**
   * @generated from field: string agent = 4;
   */
  agent: string;

  /**
   * @generated from field: string agent_method = 5;
   */
  agentMethod: string;

  /**
   * Metadata of the calling app instance
   *
   * @generated from field: string app = 6;
   */
  app: string;

  /**
   * @generated from field: string app_instance = 7;
   */
  appInstance: string;

  /**
   * @generated from field: string app_instance_method = 8;
   */
  appInstanceMethod: string;

  /**
   * @generated from field: optional uint64 block_number = 9;
   */
  blockNumber?: bigint;

  /**
   * @generated from field: repeated uint64 sequences = 10;
   */
  sequences: bigint[];

  /**
   * @generated from field: repeated uint64 sequences1 = 11;
   */
  sequences1: bigint[];

  /**
   * @generated from field: repeated uint64 sequences2 = 12;
   */
  sequences2: bigint[];

  /**
   * @generated from field: bytes data = 13;
   */
  data: Uint8Array;

  /**
   * Generated unique job ID for agent reference
   *
   * @generated from field: string job_id = 14;
   */
  jobId: string;

  /**
   * Metadata of the job
   *
   * @generated from field: uint32 attempts = 15;
   */
  attempts: number;

  /**
   * Metadata of the job
   *
   * @generated from field: uint64 created_at = 16;
   */
  createdAt: bigint;

  /**
   * @generated from field: uint64 updated_at = 17;
   */
  updatedAt: bigint;

  /**
   * Chain for settlement jobs
   *
   * @generated from field: optional string chain = 18;
   */
  chain?: string;
};

/**
 * Describes the message silvana.coordinator.v1.Job.
 * Use `create(JobSchema)` to create a new message.
 */
export const JobSchema: GenMessage<Job> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 0);

/**
 * Request message for getting a job
 *
 * @generated from message silvana.coordinator.v1.GetJobRequest
 */
export type GetJobRequest = Message<"silvana.coordinator.v1.GetJobRequest"> & {
  /**
   * @generated from field: string developer = 1;
   */
  developer: string;

  /**
   * @generated from field: string agent = 2;
   */
  agent: string;

  /**
   * @generated from field: string agent_method = 3;
   */
  agentMethod: string;

  /**
   * @generated from field: string session_id = 4;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetJobRequest.
 * Use `create(GetJobRequestSchema)` to create a new message.
 */
export const GetJobRequestSchema: GenMessage<GetJobRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 1);

/**
 * Response message containing a job
 *
 * @generated from message silvana.coordinator.v1.GetJobResponse
 */
export type GetJobResponse = Message<"silvana.coordinator.v1.GetJobResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: optional silvana.coordinator.v1.Job job = 3;
   */
  job?: Job;
};

/**
 * Describes the message silvana.coordinator.v1.GetJobResponse.
 * Use `create(GetJobResponseSchema)` to create a new message.
 */
export const GetJobResponseSchema: GenMessage<GetJobResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 2);

/**
 * Request message for completing a job
 *
 * @generated from message silvana.coordinator.v1.CompleteJobRequest
 */
export type CompleteJobRequest = Message<"silvana.coordinator.v1.CompleteJobRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.CompleteJobRequest.
 * Use `create(CompleteJobRequestSchema)` to create a new message.
 */
export const CompleteJobRequestSchema: GenMessage<CompleteJobRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 3);

/**
 * Response message for job completion
 *
 * @generated from message silvana.coordinator.v1.CompleteJobResponse
 */
export type CompleteJobResponse = Message<"silvana.coordinator.v1.CompleteJobResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.CompleteJobResponse.
 * Use `create(CompleteJobResponseSchema)` to create a new message.
 */
export const CompleteJobResponseSchema: GenMessage<CompleteJobResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 4);

/**
 * Request message for failing a job
 *
 * @generated from message silvana.coordinator.v1.FailJobRequest
 */
export type FailJobRequest = Message<"silvana.coordinator.v1.FailJobRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * @generated from field: string session_id = 3;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.FailJobRequest.
 * Use `create(FailJobRequestSchema)` to create a new message.
 */
export const FailJobRequestSchema: GenMessage<FailJobRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 5);

/**
 * Response message for job failure
 *
 * @generated from message silvana.coordinator.v1.FailJobResponse
 */
export type FailJobResponse = Message<"silvana.coordinator.v1.FailJobResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.FailJobResponse.
 * Use `create(FailJobResponseSchema)` to create a new message.
 */
export const FailJobResponseSchema: GenMessage<FailJobResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 6);

/**
 * Request message for terminating a job
 *
 * @generated from message silvana.coordinator.v1.TerminateJobRequest
 */
export type TerminateJobRequest = Message<"silvana.coordinator.v1.TerminateJobRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string job_id = 2;
   */
  jobId: string;
};

/**
 * Describes the message silvana.coordinator.v1.TerminateJobRequest.
 * Use `create(TerminateJobRequestSchema)` to create a new message.
 */
export const TerminateJobRequestSchema: GenMessage<TerminateJobRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 7);

/**
 * Response message for terminating a job
 *
 * @generated from message silvana.coordinator.v1.TerminateJobResponse
 */
export type TerminateJobResponse = Message<"silvana.coordinator.v1.TerminateJobResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.TerminateJobResponse.
 * Use `create(TerminateJobResponseSchema)` to create a new message.
 */
export const TerminateJobResponseSchema: GenMessage<TerminateJobResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 8);

/**
 * Request message for submitting a proof
 *
 * @generated from message silvana.coordinator.v1.SubmitProofRequest
 */
export type SubmitProofRequest = Message<"silvana.coordinator.v1.SubmitProofRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 2;
   */
  blockNumber: bigint;

  /**
   * should be sorted
   *
   * @generated from field: repeated uint64 sequences = 3;
   */
  sequences: bigint[];

  /**
   * optional
   *
   * @generated from field: repeated uint64 merged_sequences_1 = 4;
   */
  mergedSequences1: bigint[];

  /**
   * optional
   *
   * @generated from field: repeated uint64 merged_sequences_2 = 5;
   */
  mergedSequences2: bigint[];

  /**
   * @generated from field: string job_id = 6;
   */
  jobId: string;

  /**
   * @generated from field: string proof = 7;
   */
  proof: string;

  /**
   * in milliseconds
   *
   * @generated from field: uint64 cpu_time = 8;
   */
  cpuTime: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.SubmitProofRequest.
 * Use `create(SubmitProofRequestSchema)` to create a new message.
 */
export const SubmitProofRequestSchema: GenMessage<SubmitProofRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 9);

/**
 * Response message for proof submission
 *
 * @generated from message silvana.coordinator.v1.SubmitProofResponse
 */
export type SubmitProofResponse = Message<"silvana.coordinator.v1.SubmitProofResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;

  /**
   * @generated from field: string da_hash = 4;
   */
  daHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.SubmitProofResponse.
 * Use `create(SubmitProofResponseSchema)` to create a new message.
 */
export const SubmitProofResponseSchema: GenMessage<SubmitProofResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 10);

/**
 * Request message for rejecting a proof
 *
 * @generated from message silvana.coordinator.v1.RejectProofRequest
 */
export type RejectProofRequest = Message<"silvana.coordinator.v1.RejectProofRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 2;
   */
  blockNumber: bigint;

  /**
   * should be sorted
   *
   * @generated from field: repeated uint64 sequences = 3;
   */
  sequences: bigint[];

  /**
   * @generated from field: string job_id = 4;
   */
  jobId: string;
};

/**
 * Describes the message silvana.coordinator.v1.RejectProofRequest.
 * Use `create(RejectProofRequestSchema)` to create a new message.
 */
export const RejectProofRequestSchema: GenMessage<RejectProofRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 11);

/**
 * Response message for proof rejection
 *
 * @generated from message silvana.coordinator.v1.RejectProofResponse
 */
export type RejectProofResponse = Message<"silvana.coordinator.v1.RejectProofResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.RejectProofResponse.
 * Use `create(RejectProofResponseSchema)` to create a new message.
 */
export const RejectProofResponseSchema: GenMessage<RejectProofResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 12);

/**
 * Request message for submitting state
 *
 * @generated from message silvana.coordinator.v1.SubmitStateRequest
 */
export type SubmitStateRequest = Message<"silvana.coordinator.v1.SubmitStateRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 sequence = 2;
   */
  sequence: bigint;

  /**
   * @generated from field: string job_id = 3;
   */
  jobId: string;

  /**
   * raw state data (vector<u8>) for update_state_for_sequence
   *
   * @generated from field: optional bytes new_state_data = 4;
   */
  newStateData?: Uint8Array;

  /**
   * serialized state data (string) to write to Walrus
   *
   * @generated from field: optional string serialized_state = 5;
   */
  serializedState?: string;
};

/**
 * Describes the message silvana.coordinator.v1.SubmitStateRequest.
 * Use `create(SubmitStateRequestSchema)` to create a new message.
 */
export const SubmitStateRequestSchema: GenMessage<SubmitStateRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 13);

/**
 * Response message for state submission
 *
 * @generated from message silvana.coordinator.v1.SubmitStateResponse
 */
export type SubmitStateResponse = Message<"silvana.coordinator.v1.SubmitStateResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;

  /**
   * only present if serialized_state was provided
   *
   * @generated from field: optional string da_hash = 4;
   */
  daHash?: string;
};

/**
 * Describes the message silvana.coordinator.v1.SubmitStateResponse.
 * Use `create(SubmitStateResponseSchema)` to create a new message.
 */
export const SubmitStateResponseSchema: GenMessage<SubmitStateResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 14);

/**
 * Sequence state message matching the Move SequenceState struct
 *
 * @generated from message silvana.coordinator.v1.SequenceState
 */
export type SequenceState = Message<"silvana.coordinator.v1.SequenceState"> & {
  /**
   * @generated from field: uint64 sequence = 1;
   */
  sequence: bigint;

  /**
   * @generated from field: optional bytes state = 2;
   */
  state?: Uint8Array;

  /**
   * @generated from field: optional string data_availability = 3;
   */
  dataAvailability?: string;

  /**
   * @generated from field: bytes optimistic_state = 4;
   */
  optimisticState: Uint8Array;

  /**
   * @generated from field: bytes transition_data = 5;
   */
  transitionData: Uint8Array;
};

/**
 * Describes the message silvana.coordinator.v1.SequenceState.
 * Use `create(SequenceStateSchema)` to create a new message.
 */
export const SequenceStateSchema: GenMessage<SequenceState> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 15);

/**
 * Request message for querying sequence states
 *
 * @generated from message silvana.coordinator.v1.GetSequenceStatesRequest
 */
export type GetSequenceStatesRequest = Message<"silvana.coordinator.v1.GetSequenceStatesRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string job_id = 2;
   */
  jobId: string;

  /**
   * @generated from field: uint64 sequence = 3;
   */
  sequence: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.GetSequenceStatesRequest.
 * Use `create(GetSequenceStatesRequestSchema)` to create a new message.
 */
export const GetSequenceStatesRequestSchema: GenMessage<GetSequenceStatesRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 16);

/**
 * Response message for sequence states query
 *
 * @generated from message silvana.coordinator.v1.GetSequenceStatesResponse
 */
export type GetSequenceStatesResponse = Message<"silvana.coordinator.v1.GetSequenceStatesResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: repeated silvana.coordinator.v1.SequenceState states = 3;
   */
  states: SequenceState[];
};

/**
 * Describes the message silvana.coordinator.v1.GetSequenceStatesResponse.
 * Use `create(GetSequenceStatesResponseSchema)` to create a new message.
 */
export const GetSequenceStatesResponseSchema: GenMessage<GetSequenceStatesResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 17);

/**
 * Request message for reading data availability by hash
 *
 * @generated from message silvana.coordinator.v1.ReadDataAvailabilityRequest
 */
export type ReadDataAvailabilityRequest = Message<"silvana.coordinator.v1.ReadDataAvailabilityRequest"> & {
  /**
   * @generated from field: string da_hash = 1;
   */
  daHash: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.ReadDataAvailabilityRequest.
 * Use `create(ReadDataAvailabilityRequestSchema)` to create a new message.
 */
export const ReadDataAvailabilityRequestSchema: GenMessage<ReadDataAvailabilityRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 18);

/**
 * Response message for data availability read
 *
 * @generated from message silvana.coordinator.v1.ReadDataAvailabilityResponse
 */
export type ReadDataAvailabilityResponse = Message<"silvana.coordinator.v1.ReadDataAvailabilityResponse"> & {
  /**
   * @generated from field: optional string data = 1;
   */
  data?: string;

  /**
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.ReadDataAvailabilityResponse.
 * Use `create(ReadDataAvailabilityResponseSchema)` to create a new message.
 */
export const ReadDataAvailabilityResponseSchema: GenMessage<ReadDataAvailabilityResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 19);

/**
 * Request message for getting a proof
 *
 * @generated from message silvana.coordinator.v1.GetProofRequest
 */
export type GetProofRequest = Message<"silvana.coordinator.v1.GetProofRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 2;
   */
  blockNumber: bigint;

  /**
   * should be sorted
   *
   * @generated from field: repeated uint64 sequences = 3;
   */
  sequences: bigint[];

  /**
   * @generated from field: string job_id = 4;
   */
  jobId: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetProofRequest.
 * Use `create(GetProofRequestSchema)` to create a new message.
 */
export const GetProofRequestSchema: GenMessage<GetProofRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 20);

/**
 * Response message for getting a proof
 *
 * @generated from message silvana.coordinator.v1.GetProofResponse
 */
export type GetProofResponse = Message<"silvana.coordinator.v1.GetProofResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * available when success is true
   *
   * @generated from field: optional string proof = 2;
   */
  proof?: string;

  /**
   * available when success is false
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetProofResponse.
 * Use `create(GetProofResponseSchema)` to create a new message.
 */
export const GetProofResponseSchema: GenMessage<GetProofResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 21);

/**
 * Request message for getting a block proof
 *
 * @generated from message silvana.coordinator.v1.GetBlockProofRequest
 */
export type GetBlockProofRequest = Message<"silvana.coordinator.v1.GetBlockProofRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 2;
   */
  blockNumber: bigint;

  /**
   * @generated from field: string job_id = 3;
   */
  jobId: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetBlockProofRequest.
 * Use `create(GetBlockProofRequestSchema)` to create a new message.
 */
export const GetBlockProofRequestSchema: GenMessage<GetBlockProofRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 22);

/**
 * Response message for getting a block proof
 *
 * @generated from message silvana.coordinator.v1.GetBlockProofResponse
 */
export type GetBlockProofResponse = Message<"silvana.coordinator.v1.GetBlockProofResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * available when success is true
   *
   * @generated from field: optional string block_proof = 2;
   */
  blockProof?: string;

  /**
   * error message or status details
   *
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetBlockProofResponse.
 * Use `create(GetBlockProofResponseSchema)` to create a new message.
 */
export const GetBlockProofResponseSchema: GenMessage<GetBlockProofResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 23);

/**
 * Request message for retrieving a secret
 *
 * @generated from message silvana.coordinator.v1.RetrieveSecretRequest
 */
export type RetrieveSecretRequest = Message<"silvana.coordinator.v1.RetrieveSecretRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;
};

/**
 * Describes the message silvana.coordinator.v1.RetrieveSecretRequest.
 * Use `create(RetrieveSecretRequestSchema)` to create a new message.
 */
export const RetrieveSecretRequestSchema: GenMessage<RetrieveSecretRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 24);

/**
 * Response message for secret retrieval
 *
 * @generated from message silvana.coordinator.v1.RetrieveSecretResponse
 */
export type RetrieveSecretResponse = Message<"silvana.coordinator.v1.RetrieveSecretResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * Only returned if success is true
   *
   * @generated from field: optional string secret_value = 3;
   */
  secretValue?: string;
};

/**
 * Describes the message silvana.coordinator.v1.RetrieveSecretResponse.
 * Use `create(RetrieveSecretResponseSchema)` to create a new message.
 */
export const RetrieveSecretResponseSchema: GenMessage<RetrieveSecretResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 25);

/**
 * Request message for setting a key-value pair
 *
 * @generated from message silvana.coordinator.v1.SetKVRequest
 */
export type SetKVRequest = Message<"silvana.coordinator.v1.SetKVRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: string key = 3;
   */
  key: string;

  /**
   * @generated from field: string value = 4;
   */
  value: string;
};

/**
 * Describes the message silvana.coordinator.v1.SetKVRequest.
 * Use `create(SetKVRequestSchema)` to create a new message.
 */
export const SetKVRequestSchema: GenMessage<SetKVRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 26);

/**
 * Response message for setting a key-value pair
 *
 * @generated from message silvana.coordinator.v1.SetKVResponse
 */
export type SetKVResponse = Message<"silvana.coordinator.v1.SetKVResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.SetKVResponse.
 * Use `create(SetKVResponseSchema)` to create a new message.
 */
export const SetKVResponseSchema: GenMessage<SetKVResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 27);

/**
 * Request message for getting a key-value pair
 *
 * @generated from message silvana.coordinator.v1.GetKVRequest
 */
export type GetKVRequest = Message<"silvana.coordinator.v1.GetKVRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: string key = 3;
   */
  key: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetKVRequest.
 * Use `create(GetKVRequestSchema)` to create a new message.
 */
export const GetKVRequestSchema: GenMessage<GetKVRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 28);

/**
 * Response message for getting a key-value pair
 *
 * @generated from message silvana.coordinator.v1.GetKVResponse
 */
export type GetKVResponse = Message<"silvana.coordinator.v1.GetKVResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * Only returned if success is true and key exists
   *
   * @generated from field: optional string value = 3;
   */
  value?: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetKVResponse.
 * Use `create(GetKVResponseSchema)` to create a new message.
 */
export const GetKVResponseSchema: GenMessage<GetKVResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 29);

/**
 * Request message for deleting a key-value pair
 *
 * @generated from message silvana.coordinator.v1.DeleteKVRequest
 */
export type DeleteKVRequest = Message<"silvana.coordinator.v1.DeleteKVRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: string key = 3;
   */
  key: string;
};

/**
 * Describes the message silvana.coordinator.v1.DeleteKVRequest.
 * Use `create(DeleteKVRequestSchema)` to create a new message.
 */
export const DeleteKVRequestSchema: GenMessage<DeleteKVRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 30);

/**
 * Response message for deleting a key-value pair
 *
 * @generated from message silvana.coordinator.v1.DeleteKVResponse
 */
export type DeleteKVResponse = Message<"silvana.coordinator.v1.DeleteKVResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.DeleteKVResponse.
 * Use `create(DeleteKVResponseSchema)` to create a new message.
 */
export const DeleteKVResponseSchema: GenMessage<DeleteKVResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 31);

/**
 * Request message for adding metadata (write-once)
 *
 * @generated from message silvana.coordinator.v1.AddMetadataRequest
 */
export type AddMetadataRequest = Message<"silvana.coordinator.v1.AddMetadataRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: string key = 3;
   */
  key: string;

  /**
   * @generated from field: string value = 4;
   */
  value: string;
};

/**
 * Describes the message silvana.coordinator.v1.AddMetadataRequest.
 * Use `create(AddMetadataRequestSchema)` to create a new message.
 */
export const AddMetadataRequestSchema: GenMessage<AddMetadataRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 32);

/**
 * Response message for adding metadata
 *
 * @generated from message silvana.coordinator.v1.AddMetadataResponse
 */
export type AddMetadataResponse = Message<"silvana.coordinator.v1.AddMetadataResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.AddMetadataResponse.
 * Use `create(AddMetadataResponseSchema)` to create a new message.
 */
export const AddMetadataResponseSchema: GenMessage<AddMetadataResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 33);

/**
 * Request message for getting metadata
 *
 * @generated from message silvana.coordinator.v1.GetMetadataRequest
 */
export type GetMetadataRequest = Message<"silvana.coordinator.v1.GetMetadataRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: optional string key = 3;
   */
  key?: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetMetadataRequest.
 * Use `create(GetMetadataRequestSchema)` to create a new message.
 */
export const GetMetadataRequestSchema: GenMessage<GetMetadataRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 34);

/**
 * Metadata message containing AppInstance information
 * Settlement info for a specific chain
 *
 * @generated from message silvana.coordinator.v1.SettlementInfo
 */
export type SettlementInfo = Message<"silvana.coordinator.v1.SettlementInfo"> & {
  /**
   * @generated from field: string chain = 1;
   */
  chain: string;

  /**
   * @generated from field: uint64 last_settled_block_number = 2;
   */
  lastSettledBlockNumber: bigint;

  /**
   * @generated from field: optional string settlement_address = 3;
   */
  settlementAddress?: string;

  /**
   * @generated from field: optional uint64 settlement_job = 4;
   */
  settlementJob?: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.SettlementInfo.
 * Use `create(SettlementInfoSchema)` to create a new message.
 */
export const SettlementInfoSchema: GenMessage<SettlementInfo> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 35);

/**
 * @generated from message silvana.coordinator.v1.Metadata
 */
export type Metadata = Message<"silvana.coordinator.v1.Metadata"> & {
  /**
   * The metadata value if a key was requested
   *
   * @generated from field: optional string value = 1;
   */
  value?: string;

  /**
   * AppInstance fields
   *
   * @generated from field: string app_instance_id = 2;
   */
  appInstanceId: string;

  /**
   * @generated from field: string silvana_app_name = 3;
   */
  silvanaAppName: string;

  /**
   * @generated from field: optional string description = 4;
   */
  description?: string;

  /**
   * @generated from field: uint64 sequence = 5;
   */
  sequence: bigint;

  /**
   * @generated from field: string admin = 6;
   */
  admin: string;

  /**
   * @generated from field: uint64 block_number = 7;
   */
  blockNumber: bigint;

  /**
   * @generated from field: uint64 previous_block_timestamp = 8;
   */
  previousBlockTimestamp: bigint;

  /**
   * @generated from field: uint64 previous_block_last_sequence = 9;
   */
  previousBlockLastSequence: bigint;

  /**
   * @generated from field: uint64 last_proved_block_number = 10;
   */
  lastProvedBlockNumber: bigint;

  /**
   * @generated from field: bool is_paused = 11;
   */
  isPaused: boolean;

  /**
   * @generated from field: uint64 created_at = 12;
   */
  createdAt: bigint;

  /**
   * @generated from field: uint64 updated_at = 13;
   */
  updatedAt: bigint;

  /**
   * Multi-chain settlement support
   *
   * key is chain identifier
   *
   * @generated from field: map<string, silvana.coordinator.v1.SettlementInfo> settlements = 14;
   */
  settlements: { [key: string]: SettlementInfo };
};

/**
 * Describes the message silvana.coordinator.v1.Metadata.
 * Use `create(MetadataSchema)` to create a new message.
 */
export const MetadataSchema: GenMessage<Metadata> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 36);

/**
 * Response message for getting metadata
 *
 * @generated from message silvana.coordinator.v1.GetMetadataResponse
 */
export type GetMetadataResponse = Message<"silvana.coordinator.v1.GetMetadataResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: optional silvana.coordinator.v1.Metadata metadata = 3;
   */
  metadata?: Metadata;
};

/**
 * Describes the message silvana.coordinator.v1.GetMetadataResponse.
 * Use `create(GetMetadataResponseSchema)` to create a new message.
 */
export const GetMetadataResponseSchema: GenMessage<GetMetadataResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 37);

/**
 * Request message for trying to create a block
 *
 * @generated from message silvana.coordinator.v1.TryCreateBlockRequest
 */
export type TryCreateBlockRequest = Message<"silvana.coordinator.v1.TryCreateBlockRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.TryCreateBlockRequest.
 * Use `create(TryCreateBlockRequestSchema)` to create a new message.
 */
export const TryCreateBlockRequestSchema: GenMessage<TryCreateBlockRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 38);

/**
 * Response message for try create block
 *
 * @generated from message silvana.coordinator.v1.TryCreateBlockResponse
 */
export type TryCreateBlockResponse = Message<"silvana.coordinator.v1.TryCreateBlockResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;

  /**
   * The block number if a block was created
   *
   * @generated from field: optional uint64 block_number = 4;
   */
  blockNumber?: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.TryCreateBlockResponse.
 * Use `create(TryCreateBlockResponseSchema)` to create a new message.
 */
export const TryCreateBlockResponseSchema: GenMessage<TryCreateBlockResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 39);

/**
 * Request message for updating block state data availability
 *
 * @generated from message silvana.coordinator.v1.UpdateBlockStateDataAvailabilityRequest
 */
export type UpdateBlockStateDataAvailabilityRequest = Message<"silvana.coordinator.v1.UpdateBlockStateDataAvailabilityRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 3;
   */
  blockNumber: bigint;

  /**
   * @generated from field: string state_data_availability = 4;
   */
  stateDataAvailability: string;
};

/**
 * Describes the message silvana.coordinator.v1.UpdateBlockStateDataAvailabilityRequest.
 * Use `create(UpdateBlockStateDataAvailabilityRequestSchema)` to create a new message.
 */
export const UpdateBlockStateDataAvailabilityRequestSchema: GenMessage<UpdateBlockStateDataAvailabilityRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 40);

/**
 * Response message for updating block state data availability
 *
 * @generated from message silvana.coordinator.v1.UpdateBlockStateDataAvailabilityResponse
 */
export type UpdateBlockStateDataAvailabilityResponse = Message<"silvana.coordinator.v1.UpdateBlockStateDataAvailabilityResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.UpdateBlockStateDataAvailabilityResponse.
 * Use `create(UpdateBlockStateDataAvailabilityResponseSchema)` to create a new message.
 */
export const UpdateBlockStateDataAvailabilityResponseSchema: GenMessage<UpdateBlockStateDataAvailabilityResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 41);

/**
 * Request message for updating block proof data availability
 *
 * @generated from message silvana.coordinator.v1.UpdateBlockProofDataAvailabilityRequest
 */
export type UpdateBlockProofDataAvailabilityRequest = Message<"silvana.coordinator.v1.UpdateBlockProofDataAvailabilityRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 3;
   */
  blockNumber: bigint;

  /**
   * @generated from field: string proof_data_availability = 4;
   */
  proofDataAvailability: string;
};

/**
 * Describes the message silvana.coordinator.v1.UpdateBlockProofDataAvailabilityRequest.
 * Use `create(UpdateBlockProofDataAvailabilityRequestSchema)` to create a new message.
 */
export const UpdateBlockProofDataAvailabilityRequestSchema: GenMessage<UpdateBlockProofDataAvailabilityRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 42);

/**
 * Response message for updating block proof data availability
 *
 * @generated from message silvana.coordinator.v1.UpdateBlockProofDataAvailabilityResponse
 */
export type UpdateBlockProofDataAvailabilityResponse = Message<"silvana.coordinator.v1.UpdateBlockProofDataAvailabilityResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.UpdateBlockProofDataAvailabilityResponse.
 * Use `create(UpdateBlockProofDataAvailabilityResponseSchema)` to create a new message.
 */
export const UpdateBlockProofDataAvailabilityResponseSchema: GenMessage<UpdateBlockProofDataAvailabilityResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 43);

/**
 * Request message for updating block settlement tx hash
 *
 * @generated from message silvana.coordinator.v1.UpdateBlockSettlementTxHashRequest
 */
export type UpdateBlockSettlementTxHashRequest = Message<"silvana.coordinator.v1.UpdateBlockSettlementTxHashRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 3;
   */
  blockNumber: bigint;

  /**
   * @generated from field: string settlement_tx_hash = 4;
   */
  settlementTxHash: string;

  /**
   * Chain identifier for multi-chain settlement
   *
   * @generated from field: string chain = 5;
   */
  chain: string;
};

/**
 * Describes the message silvana.coordinator.v1.UpdateBlockSettlementTxHashRequest.
 * Use `create(UpdateBlockSettlementTxHashRequestSchema)` to create a new message.
 */
export const UpdateBlockSettlementTxHashRequestSchema: GenMessage<UpdateBlockSettlementTxHashRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 44);

/**
 * Response message for updating block settlement tx hash
 *
 * @generated from message silvana.coordinator.v1.UpdateBlockSettlementTxHashResponse
 */
export type UpdateBlockSettlementTxHashResponse = Message<"silvana.coordinator.v1.UpdateBlockSettlementTxHashResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.UpdateBlockSettlementTxHashResponse.
 * Use `create(UpdateBlockSettlementTxHashResponseSchema)` to create a new message.
 */
export const UpdateBlockSettlementTxHashResponseSchema: GenMessage<UpdateBlockSettlementTxHashResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 45);

/**
 * Request message for updating block settlement tx included in block
 *
 * @generated from message silvana.coordinator.v1.UpdateBlockSettlementTxIncludedInBlockRequest
 */
export type UpdateBlockSettlementTxIncludedInBlockRequest = Message<"silvana.coordinator.v1.UpdateBlockSettlementTxIncludedInBlockRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 3;
   */
  blockNumber: bigint;

  /**
   * @generated from field: uint64 settled_at = 4;
   */
  settledAt: bigint;

  /**
   * Chain identifier for multi-chain settlement
   *
   * @generated from field: string chain = 5;
   */
  chain: string;
};

/**
 * Describes the message silvana.coordinator.v1.UpdateBlockSettlementTxIncludedInBlockRequest.
 * Use `create(UpdateBlockSettlementTxIncludedInBlockRequestSchema)` to create a new message.
 */
export const UpdateBlockSettlementTxIncludedInBlockRequestSchema: GenMessage<UpdateBlockSettlementTxIncludedInBlockRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 46);

/**
 * Response message for updating block settlement tx included in block
 *
 * @generated from message silvana.coordinator.v1.UpdateBlockSettlementTxIncludedInBlockResponse
 */
export type UpdateBlockSettlementTxIncludedInBlockResponse = Message<"silvana.coordinator.v1.UpdateBlockSettlementTxIncludedInBlockResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.UpdateBlockSettlementTxIncludedInBlockResponse.
 * Use `create(UpdateBlockSettlementTxIncludedInBlockResponseSchema)` to create a new message.
 */
export const UpdateBlockSettlementTxIncludedInBlockResponseSchema: GenMessage<UpdateBlockSettlementTxIncludedInBlockResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 47);

/**
 * Request message for creating an app job
 *
 * @generated from message silvana.coordinator.v1.CreateAppJobRequest
 */
export type CreateAppJobRequest = Message<"silvana.coordinator.v1.CreateAppJobRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: string method_name = 3;
   */
  methodName: string;

  /**
   * @generated from field: optional string job_description = 4;
   */
  jobDescription?: string;

  /**
   * @generated from field: optional uint64 block_number = 5;
   */
  blockNumber?: bigint;

  /**
   * @generated from field: repeated uint64 sequences = 6;
   */
  sequences: bigint[];

  /**
   * @generated from field: repeated uint64 sequences1 = 7;
   */
  sequences1: bigint[];

  /**
   * @generated from field: repeated uint64 sequences2 = 8;
   */
  sequences2: bigint[];

  /**
   * @generated from field: bytes data = 9;
   */
  data: Uint8Array;

  /**
   * @generated from field: optional uint64 interval_ms = 10;
   */
  intervalMs?: bigint;

  /**
   * @generated from field: optional uint64 next_scheduled_at = 11;
   */
  nextScheduledAt?: bigint;

  /**
   * Chain identifier for settlement jobs
   *
   * @generated from field: optional string settlement_chain = 12;
   */
  settlementChain?: string;
};

/**
 * Describes the message silvana.coordinator.v1.CreateAppJobRequest.
 * Use `create(CreateAppJobRequestSchema)` to create a new message.
 */
export const CreateAppJobRequestSchema: GenMessage<CreateAppJobRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 48);

/**
 * Response message for creating an app job
 *
 * @generated from message silvana.coordinator.v1.CreateAppJobResponse
 */
export type CreateAppJobResponse = Message<"silvana.coordinator.v1.CreateAppJobResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;

  /**
   * The sequence number of the created job
   *
   * @generated from field: uint64 job_sequence = 4;
   */
  jobSequence: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.CreateAppJobResponse.
 * Use `create(CreateAppJobResponseSchema)` to create a new message.
 */
export const CreateAppJobResponseSchema: GenMessage<CreateAppJobResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 49);

/**
 * Block message mirroring the Move Block struct
 *
 * @generated from message silvana.coordinator.v1.Block
 */
export type Block = Message<"silvana.coordinator.v1.Block"> & {
  /**
   * UID from Move
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: uint64 block_number = 3;
   */
  blockNumber: bigint;

  /**
   * @generated from field: uint64 start_sequence = 4;
   */
  startSequence: bigint;

  /**
   * @generated from field: uint64 end_sequence = 5;
   */
  endSequence: bigint;

  /**
   * Element<Scalar> as bytes
   *
   * @generated from field: bytes actions_commitment = 6;
   */
  actionsCommitment: Uint8Array;

  /**
   * Element<Scalar> as bytes
   *
   * @generated from field: bytes state_commitment = 7;
   */
  stateCommitment: Uint8Array;

  /**
   * @generated from field: uint64 time_since_last_block = 8;
   */
  timeSinceLastBlock: bigint;

  /**
   * @generated from field: uint64 number_of_transactions = 9;
   */
  numberOfTransactions: bigint;

  /**
   * Element<Scalar> as bytes
   *
   * @generated from field: bytes start_actions_commitment = 10;
   */
  startActionsCommitment: Uint8Array;

  /**
   * Element<Scalar> as bytes
   *
   * @generated from field: bytes end_actions_commitment = 11;
   */
  endActionsCommitment: Uint8Array;

  /**
   * @generated from field: optional string state_data_availability = 12;
   */
  stateDataAvailability?: string;

  /**
   * @generated from field: optional string proof_data_availability = 13;
   */
  proofDataAvailability?: string;

  /**
   * Settlement fields removed - now in Settlement per chain
   *
   * @generated from field: uint64 created_at = 14;
   */
  createdAt: bigint;

  /**
   * @generated from field: optional uint64 state_calculated_at = 15;
   */
  stateCalculatedAt?: bigint;

  /**
   * @generated from field: optional uint64 proved_at = 16;
   */
  provedAt?: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.Block.
 * Use `create(BlockSchema)` to create a new message.
 */
export const BlockSchema: GenMessage<Block> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 50);

/**
 * Request message for getting a block
 *
 * @generated from message silvana.coordinator.v1.GetBlockRequest
 */
export type GetBlockRequest = Message<"silvana.coordinator.v1.GetBlockRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 3;
   */
  blockNumber: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.GetBlockRequest.
 * Use `create(GetBlockRequestSchema)` to create a new message.
 */
export const GetBlockRequestSchema: GenMessage<GetBlockRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 51);

/**
 * Response message for getting a block
 *
 * @generated from message silvana.coordinator.v1.GetBlockResponse
 */
export type GetBlockResponse = Message<"silvana.coordinator.v1.GetBlockResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: optional silvana.coordinator.v1.Block block = 3;
   */
  block?: Block;
};

/**
 * Describes the message silvana.coordinator.v1.GetBlockResponse.
 * Use `create(GetBlockResponseSchema)` to create a new message.
 */
export const GetBlockResponseSchema: GenMessage<GetBlockResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 52);

/**
 * BlockSettlement message for settlement info on a specific chain
 *
 * @generated from message silvana.coordinator.v1.BlockSettlement
 */
export type BlockSettlement = Message<"silvana.coordinator.v1.BlockSettlement"> & {
  /**
   * @generated from field: uint64 block_number = 1;
   */
  blockNumber: bigint;

  /**
   * @generated from field: optional string settlement_tx_hash = 2;
   */
  settlementTxHash?: string;

  /**
   * @generated from field: bool settlement_tx_included_in_block = 3;
   */
  settlementTxIncludedInBlock: boolean;

  /**
   * @generated from field: optional uint64 sent_to_settlement_at = 4;
   */
  sentToSettlementAt?: bigint;

  /**
   * @generated from field: optional uint64 settled_at = 5;
   */
  settledAt?: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.BlockSettlement.
 * Use `create(BlockSettlementSchema)` to create a new message.
 */
export const BlockSettlementSchema: GenMessage<BlockSettlement> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 53);

/**
 * Request message for getting block settlement info for a specific chain
 *
 * @generated from message silvana.coordinator.v1.GetBlockSettlementRequest
 */
export type GetBlockSettlementRequest = Message<"silvana.coordinator.v1.GetBlockSettlementRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 3;
   */
  blockNumber: bigint;

  /**
   * Chain identifier
   *
   * @generated from field: string chain = 4;
   */
  chain: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetBlockSettlementRequest.
 * Use `create(GetBlockSettlementRequestSchema)` to create a new message.
 */
export const GetBlockSettlementRequestSchema: GenMessage<GetBlockSettlementRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 54);

/**
 * Response message for getting block settlement info
 *
 * @generated from message silvana.coordinator.v1.GetBlockSettlementResponse
 */
export type GetBlockSettlementResponse = Message<"silvana.coordinator.v1.GetBlockSettlementResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: optional silvana.coordinator.v1.BlockSettlement block_settlement = 3;
   */
  blockSettlement?: BlockSettlement;

  /**
   * @generated from field: string chain = 4;
   */
  chain: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetBlockSettlementResponse.
 * Use `create(GetBlockSettlementResponseSchema)` to create a new message.
 */
export const GetBlockSettlementResponseSchema: GenMessage<GetBlockSettlementResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 55);

/**
 * Request message for updating block settlement on a specific chain
 *
 * @generated from message silvana.coordinator.v1.UpdateBlockSettlementRequest
 */
export type UpdateBlockSettlementRequest = Message<"silvana.coordinator.v1.UpdateBlockSettlementRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 3;
   */
  blockNumber: bigint;

  /**
   * @generated from field: string chain = 4;
   */
  chain: string;

  /**
   * @generated from field: optional string settlement_tx_hash = 5;
   */
  settlementTxHash?: string;

  /**
   * @generated from field: bool settlement_tx_included_in_block = 6;
   */
  settlementTxIncludedInBlock: boolean;

  /**
   * @generated from field: optional uint64 sent_to_settlement_at = 7;
   */
  sentToSettlementAt?: bigint;

  /**
   * @generated from field: optional uint64 settled_at = 8;
   */
  settledAt?: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.UpdateBlockSettlementRequest.
 * Use `create(UpdateBlockSettlementRequestSchema)` to create a new message.
 */
export const UpdateBlockSettlementRequestSchema: GenMessage<UpdateBlockSettlementRequest> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 56);

/**
 * Response message for updating block settlement
 *
 * @generated from message silvana.coordinator.v1.UpdateBlockSettlementResponse
 */
export type UpdateBlockSettlementResponse = Message<"silvana.coordinator.v1.UpdateBlockSettlementResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string tx_hash = 3;
   */
  txHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.UpdateBlockSettlementResponse.
 * Use `create(UpdateBlockSettlementResponseSchema)` to create a new message.
 */
export const UpdateBlockSettlementResponseSchema: GenMessage<UpdateBlockSettlementResponse> = /*@__PURE__*/
  messageDesc(file_proto_silvana_coordinator_v1_coordinator, 57);

/**
 * gRPC service definition
 *
 * @generated from service silvana.coordinator.v1.CoordinatorService
 */
export const CoordinatorService: GenService<{
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetJob
   */
  getJob: {
    methodKind: "unary";
    input: typeof GetJobRequestSchema;
    output: typeof GetJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.CompleteJob
   */
  completeJob: {
    methodKind: "unary";
    input: typeof CompleteJobRequestSchema;
    output: typeof CompleteJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.FailJob
   */
  failJob: {
    methodKind: "unary";
    input: typeof FailJobRequestSchema;
    output: typeof FailJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.TerminateJob
   */
  terminateJob: {
    methodKind: "unary";
    input: typeof TerminateJobRequestSchema;
    output: typeof TerminateJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.SubmitProof
   */
  submitProof: {
    methodKind: "unary";
    input: typeof SubmitProofRequestSchema;
    output: typeof SubmitProofResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.RejectProof
   */
  rejectProof: {
    methodKind: "unary";
    input: typeof RejectProofRequestSchema;
    output: typeof RejectProofResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.SubmitState
   */
  submitState: {
    methodKind: "unary";
    input: typeof SubmitStateRequestSchema;
    output: typeof SubmitStateResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetSequenceStates
   */
  getSequenceStates: {
    methodKind: "unary";
    input: typeof GetSequenceStatesRequestSchema;
    output: typeof GetSequenceStatesResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.ReadDataAvailability
   */
  readDataAvailability: {
    methodKind: "unary";
    input: typeof ReadDataAvailabilityRequestSchema;
    output: typeof ReadDataAvailabilityResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetProof
   */
  getProof: {
    methodKind: "unary";
    input: typeof GetProofRequestSchema;
    output: typeof GetProofResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetBlockProof
   */
  getBlockProof: {
    methodKind: "unary";
    input: typeof GetBlockProofRequestSchema;
    output: typeof GetBlockProofResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.RetrieveSecret
   */
  retrieveSecret: {
    methodKind: "unary";
    input: typeof RetrieveSecretRequestSchema;
    output: typeof RetrieveSecretResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.SetKV
   */
  setKV: {
    methodKind: "unary";
    input: typeof SetKVRequestSchema;
    output: typeof SetKVResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetKV
   */
  getKV: {
    methodKind: "unary";
    input: typeof GetKVRequestSchema;
    output: typeof GetKVResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.DeleteKV
   */
  deleteKV: {
    methodKind: "unary";
    input: typeof DeleteKVRequestSchema;
    output: typeof DeleteKVResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.AddMetadata
   */
  addMetadata: {
    methodKind: "unary";
    input: typeof AddMetadataRequestSchema;
    output: typeof AddMetadataResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetMetadata
   */
  getMetadata: {
    methodKind: "unary";
    input: typeof GetMetadataRequestSchema;
    output: typeof GetMetadataResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.TryCreateBlock
   */
  tryCreateBlock: {
    methodKind: "unary";
    input: typeof TryCreateBlockRequestSchema;
    output: typeof TryCreateBlockResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.UpdateBlockStateDataAvailability
   */
  updateBlockStateDataAvailability: {
    methodKind: "unary";
    input: typeof UpdateBlockStateDataAvailabilityRequestSchema;
    output: typeof UpdateBlockStateDataAvailabilityResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.UpdateBlockProofDataAvailability
   */
  updateBlockProofDataAvailability: {
    methodKind: "unary";
    input: typeof UpdateBlockProofDataAvailabilityRequestSchema;
    output: typeof UpdateBlockProofDataAvailabilityResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.UpdateBlockSettlementTxHash
   */
  updateBlockSettlementTxHash: {
    methodKind: "unary";
    input: typeof UpdateBlockSettlementTxHashRequestSchema;
    output: typeof UpdateBlockSettlementTxHashResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.UpdateBlockSettlementTxIncludedInBlock
   */
  updateBlockSettlementTxIncludedInBlock: {
    methodKind: "unary";
    input: typeof UpdateBlockSettlementTxIncludedInBlockRequestSchema;
    output: typeof UpdateBlockSettlementTxIncludedInBlockResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.CreateAppJob
   */
  createAppJob: {
    methodKind: "unary";
    input: typeof CreateAppJobRequestSchema;
    output: typeof CreateAppJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetBlock
   */
  getBlock: {
    methodKind: "unary";
    input: typeof GetBlockRequestSchema;
    output: typeof GetBlockResponseSchema;
  },
  /**
   * New BlockSettlement RPCs for multi-chain support
   *
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetBlockSettlement
   */
  getBlockSettlement: {
    methodKind: "unary";
    input: typeof GetBlockSettlementRequestSchema;
    output: typeof GetBlockSettlementResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.UpdateBlockSettlement
   */
  updateBlockSettlement: {
    methodKind: "unary";
    input: typeof UpdateBlockSettlementRequestSchema;
    output: typeof UpdateBlockSettlementResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_proto_silvana_coordinator_v1_coordinator, 0);

